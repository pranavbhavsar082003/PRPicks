@model PRPicks.Models.Order

@{
    ViewData["Title"] = "Order Details";
}

<h1>@ViewData["Title"]</h1>

<div>
    <dl>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Total)
        </dt>
        
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Total)
        </dd>
        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PaymentReceived)
        </dt>
        
        <dd class="col-sm-10">
            @(Model.PaymentReceived ? "Yes" : "No")
        </dd>
    </dl>

    @if (Model.OrderItems != null)
    {
        <table class = "table tale-striped table-bordered">
            <thread>
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                </tr>
            </thread>

            <tbody>
                @foreach (var orderItem in Model.OrderItems)
                {
                    <tr>
                        <td>@orderItem.ProductName</td>
                        <td>@orderItem.Quantity</td>
                        <td>@orderItem.Price</td>
                        <td>
                            @((decimal)(orderItem.Quantity * orderItem.Price))
                        </td>
                    </tr>
                }
            </tbody>

            <tfoot>
                <tr>
                    <th>Total</th>
                    <td colspan="3">
                        @Model.OrderItems.Sum(OrderItem => (decimal)(OrderItem.Quantity * OrderItem.Price))
                    </td>
                </tr>
            </tfoot>
        </table>
    }
</div>
<div>
    @if (!Model.PaymentReceived)
    {
        <form asp-action="ProcessPayment">
            <button class="btn btn-success">Proceed to Payment</button>
        </form>
    }

    <a asp-action="Index">Back to List</a>
</div>